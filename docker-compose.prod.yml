version: '3.8'

services:
  app:
    build: 
      context: .
      target: prod
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/app_db
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY_HOURS=24
      - REFRESH_EXPIRY_DAYS=30
      - APP_ENV=production
      - LOG_LEVEL=info
      - LOG_FILE=/app/logs/api_server.log
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge